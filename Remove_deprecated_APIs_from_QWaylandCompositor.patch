From c511f01cbb9700cb0c835762920dea76dafc0e87 Mon Sep 17 00:00:00 2001
From: Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
Date: Thu, 14 May 2015 21:23:28 +0200
Subject: [PATCH] Remove deprecated APIs from QWaylandCompositor

We don't need those with the new output API and maintaining compatibility
can only be achieved in a sketchy way.

Change-Id: Ie1f3a23856410197b1da19ee8c017f603ada62cb
---
 examples/wayland/qml-compositor/main.cpp           |  1 -
 examples/wayland/server-buffer/compositor/main.cpp |  1 -
 .../compositor_api/qwaylandcompositor.cpp          | 61 ----------------------
 src/compositor/compositor_api/qwaylandcompositor.h | 10 ----
 tests/auto/compositor/tst_compositor.cpp           |  5 +-
 5 files changed, 4 insertions(+), 74 deletions(-)

diff --git a/examples/wayland/qml-compositor/main.cpp b/examples/wayland/qml-compositor/main.cpp
index ab85899..667b1af 100644
--- a/examples/wayland/qml-compositor/main.cpp
+++ b/examples/wayland/qml-compositor/main.cpp
@@ -130,7 +130,6 @@ protected:
     void resizeEvent(QResizeEvent *event)
     {
         QQuickView::resizeEvent(event);
-        QWaylandCompositor::setOutputGeometry(QRect(0, 0, width(), height()));
     }
 
     void surfaceCreated(QWaylandSurface *surface) {
diff --git a/examples/wayland/server-buffer/compositor/main.cpp b/examples/wayland/server-buffer/compositor/main.cpp
index 312cff2..b16dc78 100644
--- a/examples/wayland/server-buffer/compositor/main.cpp
+++ b/examples/wayland/server-buffer/compositor/main.cpp
@@ -200,7 +200,6 @@ protected:
     void resizeEvent(QResizeEvent *event)
     {
         QQuickView::resizeEvent(event);
-        QWaylandCompositor::setOutputGeometry(QRect(0, 0, width(), height()));
     }
 
     void surfaceCreated(QWaylandSurface *surface) {
diff --git a/src/compositor/compositor_api/qwaylandcompositor.cpp b/src/compositor/compositor_api/qwaylandcompositor.cpp
index 0d5d84e..40e54c5 100644
--- a/src/compositor/compositor_api/qwaylandcompositor.cpp
+++ b/src/compositor/compositor_api/qwaylandcompositor.cpp
@@ -236,67 +236,6 @@ const char *QWaylandCompositor::socketName() const
     return m_compositor->m_socket_name.constData();
 }
 
-#if QT_DEPRECATED_SINCE(5, 5)
-/*!
-  Set the screen orientation based on accelerometer data or similar.
-*/
-void QWaylandCompositor::setScreenOrientation(Qt::ScreenOrientation orientation)
-{
-    QWaylandOutput *output = primaryOutput();
-    if (output) {
-        bool isPortrait = output->window()->screen()->primaryOrientation() == Qt::PortraitOrientation;
-
-        switch (orientation) {
-        case Qt::PrimaryOrientation:
-            output->setTransform(QWaylandOutput::TransformNormal);
-            break;
-        case Qt::LandscapeOrientation:
-            output->setTransform(isPortrait ? QWaylandOutput::Transform270 : QWaylandOutput::TransformNormal);
-            break;
-        case Qt::PortraitOrientation:
-            output->setTransform(isPortrait ? QWaylandOutput::TransformNormal : QWaylandOutput::Transform90);
-            break;
-        case Qt::InvertedLandscapeOrientation:
-            output->setTransform(isPortrait ? QWaylandOutput::Transform90 : QWaylandOutput::Transform180);
-            break;
-        case Qt::InvertedPortraitOrientation:
-            output->setTransform(isPortrait ? QWaylandOutput::Transform180 : QWaylandOutput::Transform270);
-            break;
-        }
-    }
-}
-
-void QWaylandCompositor::setOutputGeometry(const QRect &geometry)
-{
-    QWaylandOutput *output = primaryOutput();
-    if (output)
-        output->setGeometry(geometry);
-}
-
-QRect QWaylandCompositor::outputGeometry() const
-{
-    QWaylandOutput *output = primaryOutput();
-    if (output)
-        return output->geometry();
-    return QRect();
-}
-
-void QWaylandCompositor::setOutputRefreshRate(int rate)
-{
-    QWaylandOutput *output = primaryOutput();
-    if (output)
-        output->setMode({output->mode().size, rate});
-}
-
-int QWaylandCompositor::outputRefreshRate() const
-{
-    QWaylandOutput *output = primaryOutput();
-    if (output)
-        return output->mode().refreshRate;
-    return 0;
-}
-#endif
-
 QWaylandInputDevice *QWaylandCompositor::defaultInputDevice() const
 {
     return m_compositor->defaultInputDevice()->handle();
diff --git a/src/compositor/compositor_api/qwaylandcompositor.h b/src/compositor/compositor_api/qwaylandcompositor.h
index 1817fa0..8a0f626 100644
--- a/src/compositor/compositor_api/qwaylandcompositor.h
+++ b/src/compositor/compositor_api/qwaylandcompositor.h
@@ -126,16 +126,6 @@ public:
 
     const char *socketName() const;
 
-#if QT_DEPRECATED_SINCE(5, 5)
-    void setScreenOrientation(Qt::ScreenOrientation orientation);
-
-    void setOutputGeometry(const QRect &outputGeometry);
-    QRect outputGeometry() const;
-
-    void setOutputRefreshRate(int refreshRate);
-    int outputRefreshRate() const;
-#endif
-
     QWaylandInputDevice *defaultInputDevice() const;
 
     QWaylandInputPanel *inputPanel() const;
diff --git a/tests/auto/compositor/tst_compositor.cpp b/tests/auto/compositor/tst_compositor.cpp
index 8932374..171d74c 100644
--- a/tests/auto/compositor/tst_compositor.cpp
+++ b/tests/auto/compositor/tst_compositor.cpp
@@ -35,6 +35,7 @@
 #include "testcompositor.h"
 #include "testkeyboardgrabber.h"
 
+#include "QtCompositor/qwaylandoutput.h"
 #include "QtCompositor/private/qwlkeyboard_p.h"
 #include "QtCompositor/private/qwlinputdevice_p.h"
 #include "QtCompositor/private/qwlcompositor_p.h"
@@ -188,7 +189,9 @@ void tst_WaylandCompositor::geometry()
     TestCompositor compositor;
 
     QRect geometry(0, 0, 4096, 3072);
-    compositor.setOutputGeometry(geometry);
+
+    QWaylandOutput *output = new QWaylandOutput(&compositor, Q_NULLPTR, "", "");
+    output->setGeometry(geometry);
 
     MockClient client;
 
-- 
1.9.0

